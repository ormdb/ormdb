**`Execute`** method is used to execute a **command** or a **query**.

<br/>

**Definition**
``````XXX
```C#
public static Task ExecuteAsync(this SQL.IExecutable o, 
								Connection.Connection Connection, 
								Connection.ExecuteIn ExecuteIn = Connection.ExecuteIn.ActualConnection)

public static void Execute(this SQL.IExecutable o, 
						   Connection.Connection Connection, 
						   Connection.ExecuteIn ExecuteIn = Connection.ExecuteIn.ActualConnection)

public static DataTable Execute(this SQL.IQueryable o, 
								Connection.Connection Connection, 
								bool ForUpdate = false)
```
```VB
Public Function ExecuteAsync(o As SQL.IExecutable, 
							 Connection As Connection.Connection, 
							 Optional ExecuteIn As Connection.ExecuteIn = Connection.ExecuteIn.ActualConnection) As Task

Public Sub Execute(o As SQL.IExecutable, 
				   Connection As Connection.Connection,
				   Optional ExecuteIn As Connection.ExecuteIn = Connection.ExecuteIn.ActualConnection)

Public Function Execute(o As SQL.IQueryable, 
						Connection As Connection.Connection, 
						Optional ByVal ForUpdate As Boolean = False) As DataTable
```
``````

<br/>

**Remarks**

These methods are come as an extension methods. So you have to **include** or **import** to use them.


<br/>

**Examples**

>Please refer to [Example Header](##OTH-Example-Header) for usage.

<br/>


``````XXX
```C#
using Odb; /* for extensions */

/* ... */

// to execute a command. (SQL.IExecutable)
sql.Execute(cn);

// to get the query result as DataReader. (SQL.IQueryable)
var dt = sql.Execute(cn, ForUpdate:true);
```
```VB
Imports Odb ' for extensions

' ...

' to execute a command. (SQL.IExecutable)
Call sql.Execute(cn)

' to get the query result as DataReader. (SQL.IQueryable)
Dim dt = sql.Execute(cn, ForUpdate:=true)
```
``````

<br/>