<k>Execute</k> method is used to execute a command or a query.
<co type="warning">
	These methods are come as an extension methods. So you have to <b>include</b> or <b>import</b> to use them.
</co>


<st>Definition</st>
<co type="light">
	<small><b>Namespace : </b>Odb.Extensions</small>
</co>
<code-tab>
	<code lang="c#">
		Task ExecuteAsync(this SQL.IExecutable o, 
						  Connection.Connection Connection, 
						  Connection.ExecuteIn ExecuteIn = Connection.ExecuteIn.ActualConnection)

		void Execute(this SQL.IExecutable o, 
					 Connection.Connection Connection, 
					 Connection.ExecuteIn ExecuteIn = Connection.ExecuteIn.ActualConnection)

		DataTable Execute(this SQL.IQueryable o, 
						  Connection.Connection Connection, 
						  bool ForUpdate = false)
	</code>
	<code lang="vb">
		ExecuteAsync(o As SQL.IExecutable, 
					 Connection As Connection.Connection, 
					 Optional ExecuteIn As Connection.ExecuteIn = Connection.ExecuteIn.ActualConnection) As Task

		Execute(o As SQL.IExecutable, 
				Connection As Connection.Connection,
				Optional ExecuteIn As Connection.ExecuteIn = Connection.ExecuteIn.ActualConnection)

		Execute(o As SQL.IQueryable, 
				Connection As Connection.Connection, 
				Optional ByVal ForUpdate As Boolean = False) As DataTable
	</code>
</code-tab>

<st>Examples</st>
<ew/>
<br/>
<br/>
<code-tab>
	<code lang="c#">
		using Odb; /* for extensions */

		/* ... */

		// to execute a command. (SQL.IExecutable)
		sql.Execute(cn);

		// to get the query result as DataReader. (SQL.IQueryable)
		var dt = sql.Execute(cn, ForUpdate:true);
	</code>
	<code lang="vb">
		Imports Odb ' for extensions

		' ...

		' to execute a command. (SQL.IExecutable)
		Call sql.Execute(cn)

		' to get the query result as DataReader. (SQL.IQueryable)
		Dim dt = sql.Execute(cn, ForUpdate:=true)
	</code>
</code-tab>
