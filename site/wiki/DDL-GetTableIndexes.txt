Obtains [SchemaIndexInfo] according to provider for specified [Table] via [Database] connected.

<br/>

**Definition**
``````XXX
```C#
namespace Connection {
    public class DDL {

        public List<SchemaIndexInfo> GeTableIndexes(string TableName){}
```
```VB
NameSpace Connection
    Public Class DDL

        Public Function GeTableIndexes(TableName As String) As List(Of SchemaIndexInfo)
```
``````

<br/>

**Return**

| SchemaIndexInfo   | Description                                            |
|-------------------|--------------------------------------------------------|
|Name               | Name of the index.                                     |
|IsPrimary          | Is primary key index.                                  |
|IsUnique           | Is index unique.                                       |
|IsClustered        | Is index clustered.                                    |
|IsUniqueConstraint | Is index unique-constraint.                            |
|Columns            | Columns of the index.                                  |

<br/>

**Examples**

>Examples shown below needs the [Example Header](##OTH-Example-Header).

<br/>

Following section demonstrates reading the indexes of table **by its instance**.

``````XXX
```C#
foreach (var index in cn.DDL.GeTableIndexes("table_name")){

    Debug.WriteLine($"{index.Name}, is primary={index.IsPrimary}");

    Debug.WriteLine($"Columns");
    Debug.WriteLine($"----------------------------");

    foreach (var column in index.Columns){
        Debug.WriteLine(column.Name.ToString());
    }
}
```
```VB
For Each index In cn.DDL.GeTableIndexes("table_name")

    Debug.WriteLine($"{index.Name}, is primary={index.IsPrimary}")

    Debug.WriteLine($"Columns")
    Debug.WriteLine($"----------------------------")

    For Each column In index.Columns
        Debug.WriteLine(column.Name.ToString())
    Next
Next
```
``````

<br/>

Following section demonstrates reading the indexes of table **by its name**.

``````XXX
```C#
foreach (var index in h.GetIndexes()) {
    Debug.WriteLine($"{index.Name}, is primary={index.IsPrimary}");
}
```
```VB
For Each index In h.GetIndexes()
    Debug.WriteLine($"{index.Name}, is primary={index.IsPrimary}")
Next
```
``````

<br/>