<b><k>OrmDb</k></b> uses a <b>Connection.Provider</b> shown below, to connect to a data source by supplying necessary authentication information in a <b>provider</b>. 
<br/>
<br/>
<table>
	<thead>
		<th>Provider</th>
		<th></th>
		<th>Factory</th>
	</thead>
	<tr>
		<td>Odb.Connection.Provider.<k>MsSql</k></td>
		<td>Microsoft SQL Server</td>
		<td>System.Data.SqlClient</td>
	</tr>
	<tr>
		<td>Odb.Connection.Provider.<k>MySql</k></td>
		<td>MySQL / MariaDB</td>
		<td>MySql.Data.MySqlClient</td>
	</tr>
	<tr>
		<td>Odb.Connection.Provider.<k>PostgreSql</k></td>
		<td>PostgreSQL</td>
		<td>Npgsql</td>
	</tr>
	<tr>
		<td>Odb.Connection.Provider.<k>Oracle</k></td>
		<td>Oracle</td>
		<td>Oracle.ManagedDataAccess.Client</td>
	</tr>
</table>

<br/>

<table>
	<thead>
		<th>Parameters</th>
		<th>Description</th>
	</thead>
	<tr>
		<td>Host</td>
		<td>is <k>host-info</k> of the database-server to be connected.</td>
	</tr>
	<tr>
		<td>Catalog</td>
		<td>is <k>name</k> of the <b>database</b> (or <b>service</b> for Oracle) to be connected.</td>
	</tr>
	<tr>
		<td><i>User</i></td>
		<td>Optional. is <k>user-name</k> to use when making the connection. is NOT necessary for <b>trusted-connection</b></td>
	</tr>
	<tr>
		<td><i>Password</i></td>
		<td>Optional. is <k>password</k> to use when making the connection. is NOT necessary for <b>trusted-connection</b></td>
	</tr>
	<tr>
		<td><i>Port</i></td>
		<td>Optional. is <k>port-info</k> of the database-server to be connected.</td>
	</tr>
	<tr>
		<td><i>DBA_Privilege</i></td>
		<td>Optional. provides the connection with SYSDBA privileges. (for Oracle)</td>
	</tr>
</table>

<br/>

<co type="warning">
	Following section defines a provider.
</co>

<code-tab>
	<code lang="c#">
		var ms_db = new Odb.Connection.Provider.MsSql("host", "database-name", "user", "****");

		// for trusted
		var ms_db = new Odb.Connection.Provider.MsSql("host", "database-name");
	</code>
	<code lang="vb">
		Dim ms_db = New Odb.Connection.Provider.MsSql("host", "database-name", "user", "****")

		' for trusted
		Dim ms_db = new Odb.Connection.Provider.MsSql("host", "database-name")
	</code>
</code-tab>


<st>Creating Connection</st>
<table>
	<thead>
		<th>Parameters</th>
		<th>Description</th>
	</thead>
	<tr>
		<td><b>AutoStartTrans</b></td>
		<td>Optional. Every sql are executed in transaction as automatically. Transactions are initialized again automatically after COMMIT or ROLLBACK commands.</td>
	</tr>
	<tr>
		<td><b>AutoConnect</b></td>
		<td>Optional. Connection is opened automatically on first sql execution.</td>
	</tr>
	<tr>
		<td><b>SchemaPrefix</b></td>
		<td>Optional. is used for making group the tables in database. If it is specified then the prefix appends for every tables before sql execution</td>
	</tr>
</table>

<br/>

A connection can be created with <k>Create</k> or <k>CreateAndOpen</k> via **provider** already defined.

<code-tab>
	<code lang="c#">
		Connection CreateAndOpen(bool AutoStartTrans = false)

		Connection Create(bool AutoStartTrans = false, bool AutoConnect = true)
	</code>
	<code lang="vb">
		CreateAndOpen(Optional AutoStartTrans As Boolean = False) As Connection

		Create(Optional AutoStartTrans As Boolean = False, Optional AutoConnect As Boolean = True) As Connection
	</code>
</code-tab>

<br/>


<st>Examples</st>

Following section demonstrates how to create a connection as <k>ImmediatelyConnect</k>.
<code-tab>
	<code lang="c#">
		// Connection is being initialized and opened immediately.
		var cn = ms_db.CreateAndOpen();
	</code>
	<code lang="vb">
		' Connection is being initialized and opened immediately.
		Dim cn = ms_db.CreateAndOpen()
	</code>
</code-tab>

<br/>

Following section demonstrates how to create a connection as <k>AutoConnection</k>.
<code-tab>
	<code lang="c#">
		// Connection is being initialized.
		var cn = ms_db.Create();

		// Connection is opened for first execution.
		   ...
	</code>
	<code lang="vb">
		' Connection is being initialized.
		Dim cn = ms_db.Create()

		' Connection is opened for first execution.
		   ...
	</code>
</code-tab>

<br/>

Following section demonstrates how to create a connection as <k>AutoConnection</k>.
<code-tab>
	<code lang="c#">
		// Connection is being initialized.
		var cn = ms_db.Create(AutoConnect:false);

		// Connection is NOT opened for first execution; must be opened manually.
		cn.Open();
	</code>
	<code lang="vb">
		' Connection is being initialized.
		Dim cn = ms_db.Create(AutoConnect:=false)

		' Connection is NOT opened for first execution; must be opened manually.
		cn.Open()
	</code>
</code-tab>

<br/>

Following section demonstrates how to create a connection as <k>AutoTrans</k>. Please refer to <a href="##CON-Transaction">Transaction</a> for further information.

<code-tab>
	<code lang="c#">
		// Initialize transaction automatically on every Commit and Roolback.
		var cn = ms_db.Create(AutoTrans:false);
	</code>
	<code lang="vb">
		' Initialize transaction automatically on every Commit and Roolback.
		Dim cn = ms_db.Create(AutoTrans:=false)
	</code>
</code-tab>

<br/>

This means that each time a transaction is committed or rolled-back, a new transaction is started and all queries are automatically executed in this transaction.

<br/>