**`DataTable`** is similar to [DataReader](##GEN-DataReader). Main difference is **`DataTable`** retrieves 
the all records from server to local memory. In this way you can operate the **CRUD** operations as offline and then modifications can be send to the server as bulk.

>Please read [DataReader](##GEN-DataReader) for the differences with **DataTable**.



<br/>

**Examples**

>Examples shown below needs the [Example Header](##OTH-Example-Header).

<br/>

Following section demonstrates **reading by DataTable**.
```C#
var sql = SQL.X.Select(h.Note, h.DocDate).From(h);
var dt = sql.Execute(cn);

    foreach (var row in dt) {
        Console.WriteLine("Note={0}, Date={1}", 
                           row(h.Note).ToString(), 
                           row(h.DocDate).ToDateTime());
    }
    var record_count = dt.count();
```

<br/>

Following section demonstrates **CRUD** operation using by **DataTable**.
```C#
var sql = SQL.X.Select().From(h);
var dt = sql.Execute(cn, ForUpdate:true);

// deleting the row at position 1
dt.Delete(1);

// updating the row at position 5
dt(5, h.Note)="NEW VALUE";

// appending new row.
var row = dt.AddRow();
    row(h.Year)=2017;
    row(h.Id)=1000;
    row(h.Note)="REC-01872-HF";
    row(h.Date)=(int)Now.ToString("yyyyMMdd");
    row(h.IsActive)=false;

// datatable modification is being pushed to the server.
dt.Update();
```