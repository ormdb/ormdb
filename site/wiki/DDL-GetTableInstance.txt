**`GetTableInstance`** is used to initialize the instance of **[Table.Base.Generic]**, according to table-information in database.

<br/>

**Definition**
```C#
namespace Connection {
    public class DDL {

        public Table.Base.Generic GetTableInstance(string TableName){}

```
<br/>

**Examples**

>Examples shown below needs the [Example Header](##OTH-Example-Header).

<br/>

Following section demonstrates generating the instance of the table.

```C#

var tb = cn.DDL.GetTableInstance("table1");

```

<br/>

Following section demonstrates reading the informations from table-instance.

```C#
// Reading table columns...
foreach ( var col in tb.GetColumns() ){
    Debug.WriteLine($"{col.Catalog}.{col.Schema}.{col.Table}.{col.Name}");
}

// Reading table indexes...
foreach ( var index in tb.Indexes ){

    Debug.WriteLine($"{index.Name}, is primary={index.IsPrimary}");

    Debug.WriteLine($"Columns");
    Debug.WriteLine($"----------------------------");

    foreach (var col in index.Columns){
        Debug.WriteLine($"{col.Name} {(index.IsDescending? "DESC" : "ASC")}");
    }
}

// Serializing table...
var data = tb.Serialize();

// Initializing a new table instance from serialized string
var new_instance = Table.Base.Deserialize(data);

```
